// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/22/2024 17:20:38"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    Elevador_TL
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Elevador_TL_vlg_vec_tst();
// constants                                           
// general purpose registers
reg D2;
reg E3;
reg E4;
reg F1;
reg G3;
reg G4;
reg G5;
reg G21;
reg H2;
reg H5;
reg H6;
reg H7;
reg J6;
reg J7;
// wires                                               
wire A13;
wire A14;
wire A15;
wire B1;
wire B2;
wire B13;
wire B14;
wire C1;
wire C2;
wire C13;
wire E1;
wire E11;
wire E14;
wire F2;
wire F11;
wire F12;
wire F13;
wire G12;
wire H1;
wire H12;
wire H13;
wire J1;
wire J2;
wire J3;

// assign statements (if any)                          
Elevador_TL i1 (
// port map - connection between master ports and signals/registers   
	.A13(A13),
	.A14(A14),
	.A15(A15),
	.B1(B1),
	.B2(B2),
	.B13(B13),
	.B14(B14),
	.C1(C1),
	.C2(C2),
	.C13(C13),
	.D2(D2),
	.E1(E1),
	.E3(E3),
	.E4(E4),
	.E11(E11),
	.E14(E14),
	.F1(F1),
	.F2(F2),
	.F11(F11),
	.F12(F12),
	.F13(F13),
	.G3(G3),
	.G4(G4),
	.G5(G5),
	.G12(G12),
	.G21(G21),
	.H1(H1),
	.H2(H2),
	.H5(H5),
	.H6(H6),
	.H7(H7),
	.H12(H12),
	.H13(H13),
	.J1(J1),
	.J2(J2),
	.J3(J3),
	.J6(J6),
	.J7(J7)
);
initial 
begin 
#1000000 $finish;
end 
initial 
begin 
#1000000 $finish;
end 
endmodule

